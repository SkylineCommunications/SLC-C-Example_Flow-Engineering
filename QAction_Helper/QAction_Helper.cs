// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 9990990 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int fleinterappreceive_9990990 = 9990990;
	/// <summary>PID: 9990990 | Type: read</summary>
	public const int fleinterappreceive = 9990990;
	/// <summary>PID: 9990991 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int fleinterappreturn_9990991 = 9990991;
	/// <summary>PID: 9990991 | Type: read</summary>
	public const int fleinterappreturn = 9990991;
	public class Write
	{
		/// <summary>PID: 9991158 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int fleincomingflowstableexpectedrxbitrate_9991158 = 9991158;
		/// <summary>PID: 9991158 | Type: write</summary>
		public const int fleincomingflowstableexpectedrxbitrate = 9991158;
		/// <summary>PID: 9991258 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int fleoutgoingflowstableexpectedtxbitrate_9991258 = 9991258;
		/// <summary>PID: 9991258 | Type: write</summary>
		public const int fleoutgoingflowstableexpectedtxbitrate = 9991258;
	}
	public class Fleinterfacesoverviewtable
	{
		/// <summary>PID: 9991000</summary>
		public const int tablePid = 9991000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 9991001</summary>
		public const int indexColumnPid = 9991001;
		public class Pid
		{
			/// <summary>PID: 9991001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableindex_9991001 = 9991001;
			/// <summary>PID: 9991001 | Type: read</summary>
			public const int fleinterfacesoverviewtableindex = 9991001;
			/// <summary>PID: 9991002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabledescription_9991002 = 9991002;
			/// <summary>PID: 9991002 | Type: read</summary>
			public const int fleinterfacesoverviewtabledescription = 9991002;
			/// <summary>PID: 9991003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletype_9991003 = 9991003;
			/// <summary>PID: 9991003 | Type: read</summary>
			public const int fleinterfacesoverviewtabletype = 9991003;
			/// <summary>PID: 9991004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableadminstatus_9991004 = 9991004;
			/// <summary>PID: 9991004 | Type: read</summary>
			public const int fleinterfacesoverviewtableadminstatus = 9991004;
			/// <summary>PID: 9991005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableoperstatus_9991005 = 9991005;
			/// <summary>PID: 9991005 | Type: read</summary>
			public const int fleinterfacesoverviewtableoperstatus = 9991005;
			/// <summary>PID: 9991006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabledisplaykey_9991006 = 9991006;
			/// <summary>PID: 9991006 | Type: read</summary>
			public const int fleinterfacesoverviewtabledisplaykey = 9991006;
			/// <summary>PID: 9991007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtablerxbitrate_9991007 = 9991007;
			/// <summary>PID: 9991007 | Type: read</summary>
			public const int fleinterfacesoverviewtablerxbitrate = 9991007;
			/// <summary>PID: 9991008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtablerxflows_9991008 = 9991008;
			/// <summary>PID: 9991008 | Type: read</summary>
			public const int fleinterfacesoverviewtablerxflows = 9991008;
			/// <summary>PID: 9991009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletxbitrate_9991009 = 9991009;
			/// <summary>PID: 9991009 | Type: read</summary>
			public const int fleinterfacesoverviewtabletxbitrate = 9991009;
			/// <summary>PID: 9991010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletxflows_9991010 = 9991010;
			/// <summary>PID: 9991010 | Type: read</summary>
			public const int fleinterfacesoverviewtabletxflows = 9991010;
			/// <summary>PID: 9991011 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtablerxutilization_9991011 = 9991011;
			/// <summary>PID: 9991011 | Type: read</summary>
			public const int fleinterfacesoverviewtablerxutilization = 9991011;
			/// <summary>PID: 9991012 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletxutilization_9991012 = 9991012;
			/// <summary>PID: 9991012 | Type: read</summary>
			public const int fleinterfacesoverviewtabletxutilization = 9991012;
			/// <summary>PID: 9991013 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxbitrate_9991013 = 9991013;
			/// <summary>PID: 9991013 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxbitrate = 9991013;
			/// <summary>PID: 9991014 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxbitratestatus_9991014 = 9991014;
			/// <summary>PID: 9991014 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxbitratestatus = 9991014;
			/// <summary>PID: 9991015 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxflows_9991015 = 9991015;
			/// <summary>PID: 9991015 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxflows = 9991015;
			/// <summary>PID: 9991016 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxflowsstatus_9991016 = 9991016;
			/// <summary>PID: 9991016 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxflowsstatus = 9991016;
			/// <summary>PID: 9991017 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxbitrate_9991017 = 9991017;
			/// <summary>PID: 9991017 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxbitrate = 9991017;
			/// <summary>PID: 9991018 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxbitratestatus_9991018 = 9991018;
			/// <summary>PID: 9991018 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxbitratestatus = 9991018;
			/// <summary>PID: 9991019 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxflows_9991019 = 9991019;
			/// <summary>PID: 9991019 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxflows = 9991019;
			/// <summary>PID: 9991020 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxflowsstatus_9991020 = 9991020;
			/// <summary>PID: 9991020 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxflowsstatus = 9991020;
			/// <summary>PID: 9991021 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabledcfinterfaceid_9991021 = 9991021;
			/// <summary>PID: 9991021 | Type: read</summary>
			public const int fleinterfacesoverviewtabledcfinterfaceid = 9991021;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableindex_9991001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int fleinterfacesoverviewtableindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabledescription_9991002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int fleinterfacesoverviewtabledescription = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletype_9991003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int fleinterfacesoverviewtabletype = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableadminstatus_9991004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int fleinterfacesoverviewtableadminstatus = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableoperstatus_9991005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int fleinterfacesoverviewtableoperstatus = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabledisplaykey_9991006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int fleinterfacesoverviewtabledisplaykey = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtablerxbitrate_9991007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int fleinterfacesoverviewtablerxbitrate = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtablerxflows_9991008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int fleinterfacesoverviewtablerxflows = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletxbitrate_9991009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int fleinterfacesoverviewtabletxbitrate = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletxflows_9991010 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int fleinterfacesoverviewtabletxflows = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtablerxutilization_9991011 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int fleinterfacesoverviewtablerxutilization = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabletxutilization_9991012 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int fleinterfacesoverviewtabletxutilization = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxbitrate_9991013 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxbitrate = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxbitratestatus_9991014 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxbitratestatus = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxflows_9991015 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxflows = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedrxflowsstatus_9991016 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedrxflowsstatus = 15;
			/// <summary>IDX: 16 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxbitrate_9991017 = 16;
			/// <summary>IDX: 16 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxbitrate = 16;
			/// <summary>IDX: 17 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxbitratestatus_9991018 = 17;
			/// <summary>IDX: 17 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxbitratestatus = 17;
			/// <summary>IDX: 18 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxflows_9991019 = 18;
			/// <summary>IDX: 18 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxflows = 18;
			/// <summary>IDX: 19 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtableexpectedtxflowsstatus_9991020 = 19;
			/// <summary>IDX: 19 | Type: read</summary>
			public const int fleinterfacesoverviewtableexpectedtxflowsstatus = 19;
			/// <summary>IDX: 20 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleinterfacesoverviewtabledcfinterfaceid_9991021 = 20;
			/// <summary>IDX: 20 | Type: read</summary>
			public const int fleinterfacesoverviewtabledcfinterfaceid = 20;
		}
	}
	public class Fleincomingflowstable
	{
		/// <summary>PID: 9991100</summary>
		public const int tablePid = 9991100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 9991101</summary>
		public const int indexColumnPid = 9991101;
		public class Pid
		{
			/// <summary>PID: 9991101 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableinstance_9991101 = 9991101;
			/// <summary>PID: 9991101 | Type: read</summary>
			public const int fleincomingflowstableinstance = 9991101;
			/// <summary>PID: 9991102 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstabledestinationip_9991102 = 9991102;
			/// <summary>PID: 9991102 | Type: read</summary>
			public const int fleincomingflowstabledestinationip = 9991102;
			/// <summary>PID: 9991103 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstabledestinationport_9991103 = 9991103;
			/// <summary>PID: 9991103 | Type: read</summary>
			public const int fleincomingflowstabledestinationport = 9991103;
			/// <summary>PID: 9991104 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablesourceip_9991104 = 9991104;
			/// <summary>PID: 9991104 | Type: read</summary>
			public const int fleincomingflowstablesourceip = 9991104;
			/// <summary>PID: 9991105 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableincominginterface_9991105 = 9991105;
			/// <summary>PID: 9991105 | Type: read</summary>
			public const int fleincomingflowstableincominginterface = 9991105;
			/// <summary>PID: 9991106 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstabletransporttype_9991106 = 9991106;
			/// <summary>PID: 9991106 | Type: read</summary>
			public const int fleincomingflowstabletransporttype = 9991106;
			/// <summary>PID: 9991107 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablerxbitrate_9991107 = 9991107;
			/// <summary>PID: 9991107 | Type: read</summary>
			public const int fleincomingflowstablerxbitrate = 9991107;
			/// <summary>PID: 9991108 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableexpectedrxbitrate_9991108 = 9991108;
			/// <summary>PID: 9991108 | Type: read</summary>
			public const int fleincomingflowstableexpectedrxbitrate = 9991108;
			/// <summary>PID: 9991109 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableexpectedrxbitratestatus_9991109 = 9991109;
			/// <summary>PID: 9991109 | Type: read</summary>
			public const int fleincomingflowstableexpectedrxbitratestatus = 9991109;
			/// <summary>PID: 9991110 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablelabel_9991110 = 9991110;
			/// <summary>PID: 9991110 | Type: read</summary>
			public const int fleincomingflowstablelabel = 9991110;
			/// <summary>PID: 9991111 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablefkoutgoing_9991111 = 9991111;
			/// <summary>PID: 9991111 | Type: read</summary>
			public const int fleincomingflowstablefkoutgoing = 9991111;
			/// <summary>PID: 9991112 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablelinkedflow_9991112 = 9991112;
			/// <summary>PID: 9991112 | Type: read</summary>
			public const int fleincomingflowstablelinkedflow = 9991112;
			/// <summary>PID: 9991113 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableflowowner_9991113 = 9991113;
			/// <summary>PID: 9991113 | Type: read</summary>
			public const int fleincomingflowstableflowowner = 9991113;
			/// <summary>PID: 9991114 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablepresent_9991114 = 9991114;
			/// <summary>PID: 9991114 | Type: read</summary>
			public const int fleincomingflowstablepresent = 9991114;
			public class Write
			{
				/// <summary>PID: 9991165 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int fleincomingflowstabledelete_9991165 = 9991165;
				/// <summary>PID: 9991165 | Type: write</summary>
				public const int fleincomingflowstabledelete = 9991165;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableinstance_9991101 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int fleincomingflowstableinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstabledestinationip_9991102 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int fleincomingflowstabledestinationip = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstabledestinationport_9991103 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int fleincomingflowstabledestinationport = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablesourceip_9991104 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int fleincomingflowstablesourceip = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableincominginterface_9991105 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int fleincomingflowstableincominginterface = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstabletransporttype_9991106 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int fleincomingflowstabletransporttype = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablerxbitrate_9991107 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int fleincomingflowstablerxbitrate = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableexpectedrxbitrate_9991108 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int fleincomingflowstableexpectedrxbitrate = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableexpectedrxbitratestatus_9991109 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int fleincomingflowstableexpectedrxbitratestatus = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablelabel_9991110 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int fleincomingflowstablelabel = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablefkoutgoing_9991111 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int fleincomingflowstablefkoutgoing = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablelinkedflow_9991112 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int fleincomingflowstablelinkedflow = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstableflowowner_9991113 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int fleincomingflowstableflowowner = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleincomingflowstablepresent_9991114 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int fleincomingflowstablepresent = 13;
		}
	}
	public class Fleoutgoingflowstable
	{
		/// <summary>PID: 9991200</summary>
		public const int tablePid = 9991200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 9991201</summary>
		public const int indexColumnPid = 9991201;
		public class Pid
		{
			/// <summary>PID: 9991201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableinstance_9991201 = 9991201;
			/// <summary>PID: 9991201 | Type: read</summary>
			public const int fleoutgoingflowstableinstance = 9991201;
			/// <summary>PID: 9991202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabledestinationip_9991202 = 9991202;
			/// <summary>PID: 9991202 | Type: read</summary>
			public const int fleoutgoingflowstabledestinationip = 9991202;
			/// <summary>PID: 9991203 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabledestinationport_9991203 = 9991203;
			/// <summary>PID: 9991203 | Type: read</summary>
			public const int fleoutgoingflowstabledestinationport = 9991203;
			/// <summary>PID: 9991204 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablesourceip_9991204 = 9991204;
			/// <summary>PID: 9991204 | Type: read</summary>
			public const int fleoutgoingflowstablesourceip = 9991204;
			/// <summary>PID: 9991205 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableoutgoinginterface_9991205 = 9991205;
			/// <summary>PID: 9991205 | Type: read</summary>
			public const int fleoutgoingflowstableoutgoinginterface = 9991205;
			/// <summary>PID: 9991206 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabletransporttype_9991206 = 9991206;
			/// <summary>PID: 9991206 | Type: read</summary>
			public const int fleoutgoingflowstabletransporttype = 9991206;
			/// <summary>PID: 9991207 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabletxbitrate_9991207 = 9991207;
			/// <summary>PID: 9991207 | Type: read</summary>
			public const int fleoutgoingflowstabletxbitrate = 9991207;
			/// <summary>PID: 9991208 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableexpectedtxbitrate_9991208 = 9991208;
			/// <summary>PID: 9991208 | Type: read</summary>
			public const int fleoutgoingflowstableexpectedtxbitrate = 9991208;
			/// <summary>PID: 9991209 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableexpectedtxbitratestatus_9991209 = 9991209;
			/// <summary>PID: 9991209 | Type: read</summary>
			public const int fleoutgoingflowstableexpectedtxbitratestatus = 9991209;
			/// <summary>PID: 9991210 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablelabel_9991210 = 9991210;
			/// <summary>PID: 9991210 | Type: read</summary>
			public const int fleoutgoingflowstablelabel = 9991210;
			/// <summary>PID: 9991211 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablefkincoming_9991211 = 9991211;
			/// <summary>PID: 9991211 | Type: read</summary>
			public const int fleoutgoingflowstablefkincoming = 9991211;
			/// <summary>PID: 9991212 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablelinkedflow_9991212 = 9991212;
			/// <summary>PID: 9991212 | Type: read</summary>
			public const int fleoutgoingflowstablelinkedflow = 9991212;
			/// <summary>PID: 9991213 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableflowowner_9991213 = 9991213;
			/// <summary>PID: 9991213 | Type: read</summary>
			public const int fleoutgoingflowstableflowowner = 9991213;
			/// <summary>PID: 9991214 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablepresent_9991214 = 9991214;
			/// <summary>PID: 9991214 | Type: read</summary>
			public const int fleoutgoingflowstablepresent = 9991214;
			public class Write
			{
				/// <summary>PID: 9991265 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int fleoutgoingflowstabledelete_9991265 = 9991265;
				/// <summary>PID: 9991265 | Type: write</summary>
				public const int fleoutgoingflowstabledelete = 9991265;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableinstance_9991201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int fleoutgoingflowstableinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabledestinationip_9991202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int fleoutgoingflowstabledestinationip = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabledestinationport_9991203 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int fleoutgoingflowstabledestinationport = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablesourceip_9991204 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int fleoutgoingflowstablesourceip = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableoutgoinginterface_9991205 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int fleoutgoingflowstableoutgoinginterface = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabletransporttype_9991206 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int fleoutgoingflowstabletransporttype = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstabletxbitrate_9991207 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int fleoutgoingflowstabletxbitrate = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableexpectedtxbitrate_9991208 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int fleoutgoingflowstableexpectedtxbitrate = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableexpectedtxbitratestatus_9991209 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int fleoutgoingflowstableexpectedtxbitratestatus = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablelabel_9991210 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int fleoutgoingflowstablelabel = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablefkincoming_9991211 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int fleoutgoingflowstablefkincoming = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablelinkedflow_9991212 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int fleoutgoingflowstablelinkedflow = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstableflowowner_9991213 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int fleoutgoingflowstableflowowner = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleoutgoingflowstablepresent_9991214 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int fleoutgoingflowstablepresent = 13;
		}
	}
	public class Fleprovisionedflowstable
	{
		/// <summary>PID: 9991300</summary>
		public const int tablePid = 9991300;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 9991301</summary>
		public const int indexColumnPid = 9991301;
		public class Pid
		{
			/// <summary>PID: 9991301 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableid_9991301 = 9991301;
			/// <summary>PID: 9991301 | Type: read</summary>
			public const int fleprovisionedflowstableid = 9991301;
			/// <summary>PID: 9991302 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstablesourceid_9991302 = 9991302;
			/// <summary>PID: 9991302 | Type: read</summary>
			public const int fleprovisionedflowstablesourceid = 9991302;
			/// <summary>PID: 9991303 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstabledestinationid_9991303 = 9991303;
			/// <summary>PID: 9991303 | Type: read</summary>
			public const int fleprovisionedflowstabledestinationid = 9991303;
			/// <summary>PID: 9991304 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableincomingdcfinterfaceid_9991304 = 9991304;
			/// <summary>PID: 9991304 | Type: read</summary>
			public const int fleprovisionedflowstableincomingdcfinterfaceid = 9991304;
			/// <summary>PID: 9991305 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableincomingdcfinterfacedynamiclink_9991305 = 9991305;
			/// <summary>PID: 9991305 | Type: read</summary>
			public const int fleprovisionedflowstableincomingdcfinterfacedynamiclink = 9991305;
			/// <summary>PID: 9991306 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoutgoingdcfinterfaceid_9991306 = 9991306;
			/// <summary>PID: 9991306 | Type: read</summary>
			public const int fleprovisionedflowstableoutgoingdcfinterfaceid = 9991306;
			/// <summary>PID: 9991307 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoutgoingdcfinterfacedynamiclink_9991307 = 9991307;
			/// <summary>PID: 9991307 | Type: read</summary>
			public const int fleprovisionedflowstableoutgoingdcfinterfacedynamiclink = 9991307;
			/// <summary>PID: 9991308 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoptionalsourceidentifier_9991308 = 9991308;
			/// <summary>PID: 9991308 | Type: read</summary>
			public const int fleprovisionedflowstableoptionalsourceidentifier = 9991308;
			/// <summary>PID: 9991309 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoptionaldestinationidentifier_9991309 = 9991309;
			/// <summary>PID: 9991309 | Type: read</summary>
			public const int fleprovisionedflowstableoptionaldestinationidentifier = 9991309;
			/// <summary>PID: 9991310 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstabledestinationip_9991310 = 9991310;
			/// <summary>PID: 9991310 | Type: read</summary>
			public const int fleprovisionedflowstabledestinationip = 9991310;
			/// <summary>PID: 9991311 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstabledestinationport_9991311 = 9991311;
			/// <summary>PID: 9991311 | Type: read</summary>
			public const int fleprovisionedflowstabledestinationport = 9991311;
			/// <summary>PID: 9991312 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstablesourceip_9991312 = 9991312;
			/// <summary>PID: 9991312 | Type: read</summary>
			public const int fleprovisionedflowstablesourceip = 9991312;
			/// <summary>PID: 9991313 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstablemetadata_9991313 = 9991313;
			/// <summary>PID: 9991313 | Type: read</summary>
			public const int fleprovisionedflowstablemetadata = 9991313;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableid_9991301 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int fleprovisionedflowstableid = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstablesourceid_9991302 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int fleprovisionedflowstablesourceid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstabledestinationid_9991303 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int fleprovisionedflowstabledestinationid = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableincomingdcfinterfaceid_9991304 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int fleprovisionedflowstableincomingdcfinterfaceid = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableincomingdcfinterfacedynamiclink_9991305 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int fleprovisionedflowstableincomingdcfinterfacedynamiclink = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoutgoingdcfinterfaceid_9991306 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int fleprovisionedflowstableoutgoingdcfinterfaceid = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoutgoingdcfinterfacedynamiclink_9991307 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int fleprovisionedflowstableoutgoingdcfinterfacedynamiclink = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoptionalsourceidentifier_9991308 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int fleprovisionedflowstableoptionalsourceidentifier = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstableoptionaldestinationidentifier_9991309 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int fleprovisionedflowstableoptionaldestinationidentifier = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstabledestinationip_9991310 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int fleprovisionedflowstabledestinationip = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstabledestinationport_9991311 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int fleprovisionedflowstabledestinationport = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstablesourceip_9991312 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int fleprovisionedflowstablesourceip = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int fleprovisionedflowstablemetadata_9991313 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int fleprovisionedflowstablemetadata = 12;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 9991158  | Type: write</summary>
	public System.Object Fleincomingflowstableexpectedrxbitrate {get { return Protocol.GetParameter(9991158); }set { Protocol.SetParameter(9991158, value); }}
	/// <summary>PID: 9991165  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Fleincomingflowstabledelete {get { return Protocol.GetParameter(9991165); }set { Protocol.SetParameter(9991165, value); }}
	/// <summary>PID: 9991258  | Type: write</summary>
	public System.Object Fleoutgoingflowstableexpectedtxbitrate {get { return Protocol.GetParameter(9991258); }set { Protocol.SetParameter(9991258, value); }}
	/// <summary>PID: 9991265  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Fleoutgoingflowstabledelete {get { return Protocol.GetParameter(9991265); }set { Protocol.SetParameter(9991265, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 9991000</summary>
	FleinterfacesoverviewtableQActionTable fleinterfacesoverviewtable { get; set; }
	/// <summary>PID: 9991100</summary>
	FleincomingflowstableQActionTable fleincomingflowstable { get; set; }
	/// <summary>PID: 9991200</summary>
	FleoutgoingflowstableQActionTable fleoutgoingflowstable { get; set; }
	/// <summary>PID: 9991300</summary>
	FleprovisionedflowstableQActionTable fleprovisionedflowstable { get; set; }
	object Afterstartup_dummy { get; set; }
	object Fleinterappreceive_9990990 { get; set; }
	object Fleinterappreceive { get; set; }
	object Fleinterappreturn_9990991 { get; set; }
	object Fleinterappreturn { get; set; }
	object Fleinterfacesoverviewtableindex_9991001 { get; set; }
	object Fleinterfacesoverviewtableindex { get; set; }
	object Fleinterfacesoverviewtabledescription_9991002 { get; set; }
	object Fleinterfacesoverviewtabledescription { get; set; }
	object Fleinterfacesoverviewtabletype_9991003 { get; set; }
	object Fleinterfacesoverviewtabletype { get; set; }
	object Fleinterfacesoverviewtableadminstatus_9991004 { get; set; }
	object Fleinterfacesoverviewtableadminstatus { get; set; }
	object Fleinterfacesoverviewtableoperstatus_9991005 { get; set; }
	object Fleinterfacesoverviewtableoperstatus { get; set; }
	object Fleinterfacesoverviewtabledisplaykey_9991006 { get; set; }
	object Fleinterfacesoverviewtabledisplaykey { get; set; }
	object Fleinterfacesoverviewtablerxbitrate_9991007 { get; set; }
	object Fleinterfacesoverviewtablerxbitrate { get; set; }
	object Fleinterfacesoverviewtablerxflows_9991008 { get; set; }
	object Fleinterfacesoverviewtablerxflows { get; set; }
	object Fleinterfacesoverviewtabletxbitrate_9991009 { get; set; }
	object Fleinterfacesoverviewtabletxbitrate { get; set; }
	object Fleinterfacesoverviewtabletxflows_9991010 { get; set; }
	object Fleinterfacesoverviewtabletxflows { get; set; }
	object Fleinterfacesoverviewtablerxutilization_9991011 { get; set; }
	object Fleinterfacesoverviewtablerxutilization { get; set; }
	object Fleinterfacesoverviewtabletxutilization_9991012 { get; set; }
	object Fleinterfacesoverviewtabletxutilization { get; set; }
	object Fleinterfacesoverviewtableexpectedrxbitrate_9991013 { get; set; }
	object Fleinterfacesoverviewtableexpectedrxbitrate { get; set; }
	object Fleinterfacesoverviewtableexpectedrxbitratestatus_9991014 { get; set; }
	object Fleinterfacesoverviewtableexpectedrxbitratestatus { get; set; }
	object Fleinterfacesoverviewtableexpectedrxflows_9991015 { get; set; }
	object Fleinterfacesoverviewtableexpectedrxflows { get; set; }
	object Fleinterfacesoverviewtableexpectedrxflowsstatus_9991016 { get; set; }
	object Fleinterfacesoverviewtableexpectedrxflowsstatus { get; set; }
	object Fleinterfacesoverviewtableexpectedtxbitrate_9991017 { get; set; }
	object Fleinterfacesoverviewtableexpectedtxbitrate { get; set; }
	object Fleinterfacesoverviewtableexpectedtxbitratestatus_9991018 { get; set; }
	object Fleinterfacesoverviewtableexpectedtxbitratestatus { get; set; }
	object Fleinterfacesoverviewtableexpectedtxflows_9991019 { get; set; }
	object Fleinterfacesoverviewtableexpectedtxflows { get; set; }
	object Fleinterfacesoverviewtableexpectedtxflowsstatus_9991020 { get; set; }
	object Fleinterfacesoverviewtableexpectedtxflowsstatus { get; set; }
	object Fleinterfacesoverviewtabledcfinterfaceid_9991021 { get; set; }
	object Fleinterfacesoverviewtabledcfinterfaceid { get; set; }
	object Fleincomingflowstableinstance_9991101 { get; set; }
	object Fleincomingflowstableinstance { get; set; }
	object Fleincomingflowstabledestinationip_9991102 { get; set; }
	object Fleincomingflowstabledestinationip { get; set; }
	object Fleincomingflowstabledestinationport_9991103 { get; set; }
	object Fleincomingflowstabledestinationport { get; set; }
	object Fleincomingflowstablesourceip_9991104 { get; set; }
	object Fleincomingflowstablesourceip { get; set; }
	object Fleincomingflowstableincominginterface_9991105 { get; set; }
	object Fleincomingflowstableincominginterface { get; set; }
	object Fleincomingflowstabletransporttype_9991106 { get; set; }
	object Fleincomingflowstabletransporttype { get; set; }
	object Fleincomingflowstablerxbitrate_9991107 { get; set; }
	object Fleincomingflowstablerxbitrate { get; set; }
	object Fleincomingflowstableexpectedrxbitrate_9991108 { get; set; }
	object Fleincomingflowstableexpectedrxbitrate { get; set; }
	object Fleincomingflowstableexpectedrxbitratestatus_9991109 { get; set; }
	object Fleincomingflowstableexpectedrxbitratestatus { get; set; }
	object Fleincomingflowstablelabel_9991110 { get; set; }
	object Fleincomingflowstablelabel { get; set; }
	object Fleincomingflowstablefkoutgoing_9991111 { get; set; }
	object Fleincomingflowstablefkoutgoing { get; set; }
	object Fleincomingflowstablelinkedflow_9991112 { get; set; }
	object Fleincomingflowstablelinkedflow { get; set; }
	object Fleincomingflowstableflowowner_9991113 { get; set; }
	object Fleincomingflowstableflowowner { get; set; }
	object Fleincomingflowstablepresent_9991114 { get; set; }
	object Fleincomingflowstablepresent { get; set; }
	object Fleincomingflowstableexpectedrxbitrate_9991158 { get; set; }
	object Fleincomingflowstabledelete_9991165 { get; set; }
	object Fleincomingflowstabledelete { get; set; }
	object Fleoutgoingflowstableinstance_9991201 { get; set; }
	object Fleoutgoingflowstableinstance { get; set; }
	object Fleoutgoingflowstabledestinationip_9991202 { get; set; }
	object Fleoutgoingflowstabledestinationip { get; set; }
	object Fleoutgoingflowstabledestinationport_9991203 { get; set; }
	object Fleoutgoingflowstabledestinationport { get; set; }
	object Fleoutgoingflowstablesourceip_9991204 { get; set; }
	object Fleoutgoingflowstablesourceip { get; set; }
	object Fleoutgoingflowstableoutgoinginterface_9991205 { get; set; }
	object Fleoutgoingflowstableoutgoinginterface { get; set; }
	object Fleoutgoingflowstabletransporttype_9991206 { get; set; }
	object Fleoutgoingflowstabletransporttype { get; set; }
	object Fleoutgoingflowstabletxbitrate_9991207 { get; set; }
	object Fleoutgoingflowstabletxbitrate { get; set; }
	object Fleoutgoingflowstableexpectedtxbitrate_9991208 { get; set; }
	object Fleoutgoingflowstableexpectedtxbitrate { get; set; }
	object Fleoutgoingflowstableexpectedtxbitratestatus_9991209 { get; set; }
	object Fleoutgoingflowstableexpectedtxbitratestatus { get; set; }
	object Fleoutgoingflowstablelabel_9991210 { get; set; }
	object Fleoutgoingflowstablelabel { get; set; }
	object Fleoutgoingflowstablefkincoming_9991211 { get; set; }
	object Fleoutgoingflowstablefkincoming { get; set; }
	object Fleoutgoingflowstablelinkedflow_9991212 { get; set; }
	object Fleoutgoingflowstablelinkedflow { get; set; }
	object Fleoutgoingflowstableflowowner_9991213 { get; set; }
	object Fleoutgoingflowstableflowowner { get; set; }
	object Fleoutgoingflowstablepresent_9991214 { get; set; }
	object Fleoutgoingflowstablepresent { get; set; }
	object Fleoutgoingflowstableexpectedtxbitrate_9991258 { get; set; }
	object Fleoutgoingflowstabledelete_9991265 { get; set; }
	object Fleoutgoingflowstabledelete { get; set; }
	object Fleprovisionedflowstableid_9991301 { get; set; }
	object Fleprovisionedflowstableid { get; set; }
	object Fleprovisionedflowstablesourceid_9991302 { get; set; }
	object Fleprovisionedflowstablesourceid { get; set; }
	object Fleprovisionedflowstabledestinationid_9991303 { get; set; }
	object Fleprovisionedflowstabledestinationid { get; set; }
	object Fleprovisionedflowstableincomingdcfinterfaceid_9991304 { get; set; }
	object Fleprovisionedflowstableincomingdcfinterfaceid { get; set; }
	object Fleprovisionedflowstableincomingdcfinterfacedynamiclink_9991305 { get; set; }
	object Fleprovisionedflowstableincomingdcfinterfacedynamiclink { get; set; }
	object Fleprovisionedflowstableoutgoingdcfinterfaceid_9991306 { get; set; }
	object Fleprovisionedflowstableoutgoingdcfinterfaceid { get; set; }
	object Fleprovisionedflowstableoutgoingdcfinterfacedynamiclink_9991307 { get; set; }
	object Fleprovisionedflowstableoutgoingdcfinterfacedynamiclink { get; set; }
	object Fleprovisionedflowstableoptionalsourceidentifier_9991308 { get; set; }
	object Fleprovisionedflowstableoptionalsourceidentifier { get; set; }
	object Fleprovisionedflowstableoptionaldestinationidentifier_9991309 { get; set; }
	object Fleprovisionedflowstableoptionaldestinationidentifier { get; set; }
	object Fleprovisionedflowstabledestinationip_9991310 { get; set; }
	object Fleprovisionedflowstabledestinationip { get; set; }
	object Fleprovisionedflowstabledestinationport_9991311 { get; set; }
	object Fleprovisionedflowstabledestinationport { get; set; }
	object Fleprovisionedflowstablesourceip_9991312 { get; set; }
	object Fleprovisionedflowstablesourceip { get; set; }
	object Fleprovisionedflowstablemetadata_9991313 { get; set; }
	object Fleprovisionedflowstablemetadata { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 9991000</summary>
	public FleinterfacesoverviewtableQActionTable fleinterfacesoverviewtable { get; set; }
	/// <summary>PID: 9991100</summary>
	public FleincomingflowstableQActionTable fleincomingflowstable { get; set; }
	/// <summary>PID: 9991200</summary>
	public FleoutgoingflowstableQActionTable fleoutgoingflowstable { get; set; }
	/// <summary>PID: 9991300</summary>
	public FleprovisionedflowstableQActionTable fleprovisionedflowstable { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 9990990  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterappreceive_9990990 {get { return GetParameter(9990990); }set { SetParameter(9990990, value); }}
	/// <summary>PID: 9990990  | Type: read</summary>
	public System.Object Fleinterappreceive {get { return GetParameter(9990990); }set { SetParameter(9990990, value); }}
	/// <summary>PID: 9990991  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterappreturn_9990991 {get { return GetParameter(9990991); }set { SetParameter(9990991, value); }}
	/// <summary>PID: 9990991  | Type: read</summary>
	public System.Object Fleinterappreturn {get { return GetParameter(9990991); }set { SetParameter(9990991, value); }}
	/// <summary>PID: 9991001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableindex_9991001 {get { return GetParameter(9991001); }set { SetParameter(9991001, value); }}
	/// <summary>PID: 9991001  | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableindex {get { return GetParameter(9991001); }set { SetParameter(9991001, value); }}
	/// <summary>PID: 9991002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabledescription_9991002 {get { return GetParameter(9991002); }set { SetParameter(9991002, value); }}
	/// <summary>PID: 9991002  | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabledescription {get { return GetParameter(9991002); }set { SetParameter(9991002, value); }}
	/// <summary>PID: 9991003  | Type: read | DISCREETS: Other = 0, Ethernet = 1, SDI = 2, ASI = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletype_9991003 {get { return GetParameter(9991003); }set { SetParameter(9991003, value); }}
	/// <summary>PID: 9991003  | Type: read | DISCREETS: Other = 0, Ethernet = 1, SDI = 2, ASI = 3</summary>
	public System.Object Fleinterfacesoverviewtabletype {get { return GetParameter(9991003); }set { SetParameter(9991003, value); }}
	/// <summary>PID: 9991004  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableadminstatus_9991004 {get { return GetParameter(9991004); }set { SetParameter(9991004, value); }}
	/// <summary>PID: 9991004  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	public System.Object Fleinterfacesoverviewtableadminstatus {get { return GetParameter(9991004); }set { SetParameter(9991004, value); }}
	/// <summary>PID: 9991005  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3, Unknown = 4, Dormant = 5, Not Present = 6, Lower Layer Down = 7, Admin Down = 10</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableoperstatus_9991005 {get { return GetParameter(9991005); }set { SetParameter(9991005, value); }}
	/// <summary>PID: 9991005  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3, Unknown = 4, Dormant = 5, Not Present = 6, Lower Layer Down = 7, Admin Down = 10</summary>
	public System.Object Fleinterfacesoverviewtableoperstatus {get { return GetParameter(9991005); }set { SetParameter(9991005, value); }}
	/// <summary>PID: 9991006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabledisplaykey_9991006 {get { return GetParameter(9991006); }set { SetParameter(9991006, value); }}
	/// <summary>PID: 9991006  | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabledisplaykey {get { return GetParameter(9991006); }set { SetParameter(9991006, value); }}
	/// <summary>PID: 9991007  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtablerxbitrate_9991007 {get { return GetParameter(9991007); }set { SetParameter(9991007, value); }}
	/// <summary>PID: 9991007  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtablerxbitrate {get { return GetParameter(9991007); }set { SetParameter(9991007, value); }}
	/// <summary>PID: 9991008  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtablerxflows_9991008 {get { return GetParameter(9991008); }set { SetParameter(9991008, value); }}
	/// <summary>PID: 9991008  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtablerxflows {get { return GetParameter(9991008); }set { SetParameter(9991008, value); }}
	/// <summary>PID: 9991009  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletxbitrate_9991009 {get { return GetParameter(9991009); }set { SetParameter(9991009, value); }}
	/// <summary>PID: 9991009  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtabletxbitrate {get { return GetParameter(9991009); }set { SetParameter(9991009, value); }}
	/// <summary>PID: 9991010  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletxflows_9991010 {get { return GetParameter(9991010); }set { SetParameter(9991010, value); }}
	/// <summary>PID: 9991010  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtabletxflows {get { return GetParameter(9991010); }set { SetParameter(9991010, value); }}
	/// <summary>PID: 9991011  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtablerxutilization_9991011 {get { return GetParameter(9991011); }set { SetParameter(9991011, value); }}
	/// <summary>PID: 9991011  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtablerxutilization {get { return GetParameter(9991011); }set { SetParameter(9991011, value); }}
	/// <summary>PID: 9991012  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletxutilization_9991012 {get { return GetParameter(9991012); }set { SetParameter(9991012, value); }}
	/// <summary>PID: 9991012  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtabletxutilization {get { return GetParameter(9991012); }set { SetParameter(9991012, value); }}
	/// <summary>PID: 9991013  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxbitrate_9991013 {get { return GetParameter(9991013); }set { SetParameter(9991013, value); }}
	/// <summary>PID: 9991013  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxbitrate {get { return GetParameter(9991013); }set { SetParameter(9991013, value); }}
	/// <summary>PID: 9991014  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxbitratestatus_9991014 {get { return GetParameter(9991014); }set { SetParameter(9991014, value); }}
	/// <summary>PID: 9991014  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxbitratestatus {get { return GetParameter(9991014); }set { SetParameter(9991014, value); }}
	/// <summary>PID: 9991015  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxflows_9991015 {get { return GetParameter(9991015); }set { SetParameter(9991015, value); }}
	/// <summary>PID: 9991015  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxflows {get { return GetParameter(9991015); }set { SetParameter(9991015, value); }}
	/// <summary>PID: 9991016  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxflowsstatus_9991016 {get { return GetParameter(9991016); }set { SetParameter(9991016, value); }}
	/// <summary>PID: 9991016  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxflowsstatus {get { return GetParameter(9991016); }set { SetParameter(9991016, value); }}
	/// <summary>PID: 9991017  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxbitrate_9991017 {get { return GetParameter(9991017); }set { SetParameter(9991017, value); }}
	/// <summary>PID: 9991017  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxbitrate {get { return GetParameter(9991017); }set { SetParameter(9991017, value); }}
	/// <summary>PID: 9991018  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxbitratestatus_9991018 {get { return GetParameter(9991018); }set { SetParameter(9991018, value); }}
	/// <summary>PID: 9991018  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxbitratestatus {get { return GetParameter(9991018); }set { SetParameter(9991018, value); }}
	/// <summary>PID: 9991019  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxflows_9991019 {get { return GetParameter(9991019); }set { SetParameter(9991019, value); }}
	/// <summary>PID: 9991019  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxflows {get { return GetParameter(9991019); }set { SetParameter(9991019, value); }}
	/// <summary>PID: 9991020  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxflowsstatus_9991020 {get { return GetParameter(9991020); }set { SetParameter(9991020, value); }}
	/// <summary>PID: 9991020  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxflowsstatus {get { return GetParameter(9991020); }set { SetParameter(9991020, value); }}
	/// <summary>PID: 9991021  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabledcfinterfaceid_9991021 {get { return GetParameter(9991021); }set { SetParameter(9991021, value); }}
	/// <summary>PID: 9991021  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleinterfacesoverviewtabledcfinterfaceid {get { return GetParameter(9991021); }set { SetParameter(9991021, value); }}
	/// <summary>PID: 9991101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableinstance_9991101 {get { return GetParameter(9991101); }set { SetParameter(9991101, value); }}
	/// <summary>PID: 9991101  | Type: read</summary>
	public System.Object Fleincomingflowstableinstance {get { return GetParameter(9991101); }set { SetParameter(9991101, value); }}
	/// <summary>PID: 9991102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstabledestinationip_9991102 {get { return GetParameter(9991102); }set { SetParameter(9991102, value); }}
	/// <summary>PID: 9991102  | Type: read</summary>
	public System.Object Fleincomingflowstabledestinationip {get { return GetParameter(9991102); }set { SetParameter(9991102, value); }}
	/// <summary>PID: 9991103  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstabledestinationport_9991103 {get { return GetParameter(9991103); }set { SetParameter(9991103, value); }}
	/// <summary>PID: 9991103  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleincomingflowstabledestinationport {get { return GetParameter(9991103); }set { SetParameter(9991103, value); }}
	/// <summary>PID: 9991104  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablesourceip_9991104 {get { return GetParameter(9991104); }set { SetParameter(9991104, value); }}
	/// <summary>PID: 9991104  | Type: read</summary>
	public System.Object Fleincomingflowstablesourceip {get { return GetParameter(9991104); }set { SetParameter(9991104, value); }}
	/// <summary>PID: 9991105  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableincominginterface_9991105 {get { return GetParameter(9991105); }set { SetParameter(9991105, value); }}
	/// <summary>PID: 9991105  | Type: read</summary>
	public System.Object Fleincomingflowstableincominginterface {get { return GetParameter(9991105); }set { SetParameter(9991105, value); }}
	/// <summary>PID: 9991106  | Type: read | DISCREETS: Other = 0, IP = 1, SDI = 2, ASI = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstabletransporttype_9991106 {get { return GetParameter(9991106); }set { SetParameter(9991106, value); }}
	/// <summary>PID: 9991106  | Type: read | DISCREETS: Other = 0, IP = 1, SDI = 2, ASI = 3</summary>
	public System.Object Fleincomingflowstabletransporttype {get { return GetParameter(9991106); }set { SetParameter(9991106, value); }}
	/// <summary>PID: 9991107  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablerxbitrate_9991107 {get { return GetParameter(9991107); }set { SetParameter(9991107, value); }}
	/// <summary>PID: 9991107  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleincomingflowstablerxbitrate {get { return GetParameter(9991107); }set { SetParameter(9991107, value); }}
	/// <summary>PID: 9991108  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableexpectedrxbitrate_9991108 {get { return GetParameter(9991108); }set { SetParameter(9991108, value); }}
	/// <summary>PID: 9991108  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleincomingflowstableexpectedrxbitrate {get { return GetParameter(9991108); }set { SetParameter(9991108, value); }}
	/// <summary>PID: 9991109  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableexpectedrxbitratestatus_9991109 {get { return GetParameter(9991109); }set { SetParameter(9991109, value); }}
	/// <summary>PID: 9991109  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleincomingflowstableexpectedrxbitratestatus {get { return GetParameter(9991109); }set { SetParameter(9991109, value); }}
	/// <summary>PID: 9991110  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablelabel_9991110 {get { return GetParameter(9991110); }set { SetParameter(9991110, value); }}
	/// <summary>PID: 9991110  | Type: read</summary>
	public System.Object Fleincomingflowstablelabel {get { return GetParameter(9991110); }set { SetParameter(9991110, value); }}
	/// <summary>PID: 9991111  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablefkoutgoing_9991111 {get { return GetParameter(9991111); }set { SetParameter(9991111, value); }}
	/// <summary>PID: 9991111  | Type: read</summary>
	public System.Object Fleincomingflowstablefkoutgoing {get { return GetParameter(9991111); }set { SetParameter(9991111, value); }}
	/// <summary>PID: 9991112  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablelinkedflow_9991112 {get { return GetParameter(9991112); }set { SetParameter(9991112, value); }}
	/// <summary>PID: 9991112  | Type: read</summary>
	public System.Object Fleincomingflowstablelinkedflow {get { return GetParameter(9991112); }set { SetParameter(9991112, value); }}
	/// <summary>PID: 9991113  | Type: read | DISCREETS: Local System = 0, Flow Engineering = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableflowowner_9991113 {get { return GetParameter(9991113); }set { SetParameter(9991113, value); }}
	/// <summary>PID: 9991113  | Type: read | DISCREETS: Local System = 0, Flow Engineering = 1</summary>
	public System.Object Fleincomingflowstableflowowner {get { return GetParameter(9991113); }set { SetParameter(9991113, value); }}
	/// <summary>PID: 9991114  | Type: read | DISCREETS: No = 0, Yes = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablepresent_9991114 {get { return GetParameter(9991114); }set { SetParameter(9991114, value); }}
	/// <summary>PID: 9991114  | Type: read | DISCREETS: No = 0, Yes = 1</summary>
	public System.Object Fleincomingflowstablepresent {get { return GetParameter(9991114); }set { SetParameter(9991114, value); }}
	/// <summary>PID: 9991158  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableexpectedrxbitrate_9991158 {get { return GetParameter(9991158); }set { SetParameter(9991158, value); }}
	/// <summary>PID: 9991165  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Fleincomingflowstabledelete_9991165 {get { return GetParameter(9991165); }set { SetParameter(9991165, value); }}
	/// <summary>PID: 9991165  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Fleincomingflowstabledelete {get { return Write.Fleincomingflowstabledelete; }set { Write.Fleincomingflowstabledelete = value; }}
	/// <summary>PID: 9991201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableinstance_9991201 {get { return GetParameter(9991201); }set { SetParameter(9991201, value); }}
	/// <summary>PID: 9991201  | Type: read</summary>
	public System.Object Fleoutgoingflowstableinstance {get { return GetParameter(9991201); }set { SetParameter(9991201, value); }}
	/// <summary>PID: 9991202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabledestinationip_9991202 {get { return GetParameter(9991202); }set { SetParameter(9991202, value); }}
	/// <summary>PID: 9991202  | Type: read</summary>
	public System.Object Fleoutgoingflowstabledestinationip {get { return GetParameter(9991202); }set { SetParameter(9991202, value); }}
	/// <summary>PID: 9991203  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabledestinationport_9991203 {get { return GetParameter(9991203); }set { SetParameter(9991203, value); }}
	/// <summary>PID: 9991203  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleoutgoingflowstabledestinationport {get { return GetParameter(9991203); }set { SetParameter(9991203, value); }}
	/// <summary>PID: 9991204  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablesourceip_9991204 {get { return GetParameter(9991204); }set { SetParameter(9991204, value); }}
	/// <summary>PID: 9991204  | Type: read</summary>
	public System.Object Fleoutgoingflowstablesourceip {get { return GetParameter(9991204); }set { SetParameter(9991204, value); }}
	/// <summary>PID: 9991205  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableoutgoinginterface_9991205 {get { return GetParameter(9991205); }set { SetParameter(9991205, value); }}
	/// <summary>PID: 9991205  | Type: read</summary>
	public System.Object Fleoutgoingflowstableoutgoinginterface {get { return GetParameter(9991205); }set { SetParameter(9991205, value); }}
	/// <summary>PID: 9991206  | Type: read | DISCREETS: Other = 0, IP = 1, SDI = 2, ASI = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabletransporttype_9991206 {get { return GetParameter(9991206); }set { SetParameter(9991206, value); }}
	/// <summary>PID: 9991206  | Type: read | DISCREETS: Other = 0, IP = 1, SDI = 2, ASI = 3</summary>
	public System.Object Fleoutgoingflowstabletransporttype {get { return GetParameter(9991206); }set { SetParameter(9991206, value); }}
	/// <summary>PID: 9991207  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabletxbitrate_9991207 {get { return GetParameter(9991207); }set { SetParameter(9991207, value); }}
	/// <summary>PID: 9991207  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleoutgoingflowstabletxbitrate {get { return GetParameter(9991207); }set { SetParameter(9991207, value); }}
	/// <summary>PID: 9991208  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableexpectedtxbitrate_9991208 {get { return GetParameter(9991208); }set { SetParameter(9991208, value); }}
	/// <summary>PID: 9991208  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleoutgoingflowstableexpectedtxbitrate {get { return GetParameter(9991208); }set { SetParameter(9991208, value); }}
	/// <summary>PID: 9991209  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableexpectedtxbitratestatus_9991209 {get { return GetParameter(9991209); }set { SetParameter(9991209, value); }}
	/// <summary>PID: 9991209  | Type: read | DISCREETS: Normal = 1, Unexpected Low = 2, Unexpected High = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleoutgoingflowstableexpectedtxbitratestatus {get { return GetParameter(9991209); }set { SetParameter(9991209, value); }}
	/// <summary>PID: 9991210  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablelabel_9991210 {get { return GetParameter(9991210); }set { SetParameter(9991210, value); }}
	/// <summary>PID: 9991210  | Type: read</summary>
	public System.Object Fleoutgoingflowstablelabel {get { return GetParameter(9991210); }set { SetParameter(9991210, value); }}
	/// <summary>PID: 9991211  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablefkincoming_9991211 {get { return GetParameter(9991211); }set { SetParameter(9991211, value); }}
	/// <summary>PID: 9991211  | Type: read</summary>
	public System.Object Fleoutgoingflowstablefkincoming {get { return GetParameter(9991211); }set { SetParameter(9991211, value); }}
	/// <summary>PID: 9991212  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablelinkedflow_9991212 {get { return GetParameter(9991212); }set { SetParameter(9991212, value); }}
	/// <summary>PID: 9991212  | Type: read</summary>
	public System.Object Fleoutgoingflowstablelinkedflow {get { return GetParameter(9991212); }set { SetParameter(9991212, value); }}
	/// <summary>PID: 9991213  | Type: read | DISCREETS: Local System = 0, Flow Engineering = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableflowowner_9991213 {get { return GetParameter(9991213); }set { SetParameter(9991213, value); }}
	/// <summary>PID: 9991213  | Type: read | DISCREETS: Local System = 0, Flow Engineering = 1</summary>
	public System.Object Fleoutgoingflowstableflowowner {get { return GetParameter(9991213); }set { SetParameter(9991213, value); }}
	/// <summary>PID: 9991214  | Type: read | DISCREETS: No = 0, Yes = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablepresent_9991214 {get { return GetParameter(9991214); }set { SetParameter(9991214, value); }}
	/// <summary>PID: 9991214  | Type: read | DISCREETS: No = 0, Yes = 1</summary>
	public System.Object Fleoutgoingflowstablepresent {get { return GetParameter(9991214); }set { SetParameter(9991214, value); }}
	/// <summary>PID: 9991258  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableexpectedtxbitrate_9991258 {get { return GetParameter(9991258); }set { SetParameter(9991258, value); }}
	/// <summary>PID: 9991265  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Fleoutgoingflowstabledelete_9991265 {get { return GetParameter(9991265); }set { SetParameter(9991265, value); }}
	/// <summary>PID: 9991265  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Fleoutgoingflowstabledelete {get { return Write.Fleoutgoingflowstabledelete; }set { Write.Fleoutgoingflowstabledelete = value; }}
	/// <summary>PID: 9991301  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableid_9991301 {get { return GetParameter(9991301); }set { SetParameter(9991301, value); }}
	/// <summary>PID: 9991301  | Type: read</summary>
	public System.Object Fleprovisionedflowstableid {get { return GetParameter(9991301); }set { SetParameter(9991301, value); }}
	/// <summary>PID: 9991302  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstablesourceid_9991302 {get { return GetParameter(9991302); }set { SetParameter(9991302, value); }}
	/// <summary>PID: 9991302  | Type: read</summary>
	public System.Object Fleprovisionedflowstablesourceid {get { return GetParameter(9991302); }set { SetParameter(9991302, value); }}
	/// <summary>PID: 9991303  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstabledestinationid_9991303 {get { return GetParameter(9991303); }set { SetParameter(9991303, value); }}
	/// <summary>PID: 9991303  | Type: read</summary>
	public System.Object Fleprovisionedflowstabledestinationid {get { return GetParameter(9991303); }set { SetParameter(9991303, value); }}
	/// <summary>PID: 9991304  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableincomingdcfinterfaceid_9991304 {get { return GetParameter(9991304); }set { SetParameter(9991304, value); }}
	/// <summary>PID: 9991304  | Type: read</summary>
	public System.Object Fleprovisionedflowstableincomingdcfinterfaceid {get { return GetParameter(9991304); }set { SetParameter(9991304, value); }}
	/// <summary>PID: 9991305  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableincomingdcfinterfacedynamiclink_9991305 {get { return GetParameter(9991305); }set { SetParameter(9991305, value); }}
	/// <summary>PID: 9991305  | Type: read</summary>
	public System.Object Fleprovisionedflowstableincomingdcfinterfacedynamiclink {get { return GetParameter(9991305); }set { SetParameter(9991305, value); }}
	/// <summary>PID: 9991306  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfaceid_9991306 {get { return GetParameter(9991306); }set { SetParameter(9991306, value); }}
	/// <summary>PID: 9991306  | Type: read</summary>
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfaceid {get { return GetParameter(9991306); }set { SetParameter(9991306, value); }}
	/// <summary>PID: 9991307  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfacedynamiclink_9991307 {get { return GetParameter(9991307); }set { SetParameter(9991307, value); }}
	/// <summary>PID: 9991307  | Type: read</summary>
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfacedynamiclink {get { return GetParameter(9991307); }set { SetParameter(9991307, value); }}
	/// <summary>PID: 9991308  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoptionalsourceidentifier_9991308 {get { return GetParameter(9991308); }set { SetParameter(9991308, value); }}
	/// <summary>PID: 9991308  | Type: read</summary>
	public System.Object Fleprovisionedflowstableoptionalsourceidentifier {get { return GetParameter(9991308); }set { SetParameter(9991308, value); }}
	/// <summary>PID: 9991309  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoptionaldestinationidentifier_9991309 {get { return GetParameter(9991309); }set { SetParameter(9991309, value); }}
	/// <summary>PID: 9991309  | Type: read</summary>
	public System.Object Fleprovisionedflowstableoptionaldestinationidentifier {get { return GetParameter(9991309); }set { SetParameter(9991309, value); }}
	/// <summary>PID: 9991310  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstabledestinationip_9991310 {get { return GetParameter(9991310); }set { SetParameter(9991310, value); }}
	/// <summary>PID: 9991310  | Type: read</summary>
	public System.Object Fleprovisionedflowstabledestinationip {get { return GetParameter(9991310); }set { SetParameter(9991310, value); }}
	/// <summary>PID: 9991311  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstabledestinationport_9991311 {get { return GetParameter(9991311); }set { SetParameter(9991311, value); }}
	/// <summary>PID: 9991311  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Fleprovisionedflowstabledestinationport {get { return GetParameter(9991311); }set { SetParameter(9991311, value); }}
	/// <summary>PID: 9991312  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstablesourceip_9991312 {get { return GetParameter(9991312); }set { SetParameter(9991312, value); }}
	/// <summary>PID: 9991312  | Type: read</summary>
	public System.Object Fleprovisionedflowstablesourceip {get { return GetParameter(9991312); }set { SetParameter(9991312, value); }}
	/// <summary>PID: 9991313  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstablemetadata_9991313 {get { return GetParameter(9991313); }set { SetParameter(9991313, value); }}
	/// <summary>PID: 9991313  | Type: read</summary>
	public System.Object Fleprovisionedflowstablemetadata {get { return GetParameter(9991313); }set { SetParameter(9991313, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		fleinterfacesoverviewtable = new FleinterfacesoverviewtableQActionTable(this, 9991000, "fleinterfacesoverviewtable");
		fleincomingflowstable = new FleincomingflowstableQActionTable(this, 9991100, "fleincomingflowstable");
		fleoutgoingflowstable = new FleoutgoingflowstableQActionTable(this, 9991200, "fleoutgoingflowstable");
		fleprovisionedflowstable = new FleprovisionedflowstableQActionTable(this, 9991300, "fleprovisionedflowstable");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class FleinterfacesoverviewtableQActionTable : QActionTable, IEnumerable<FleinterfacesoverviewtableQActionRow>
{
	public FleinterfacesoverviewtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<FleinterfacesoverviewtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<FleinterfacesoverviewtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class FleincomingflowstableQActionTable : QActionTable, IEnumerable<FleincomingflowstableQActionRow>
{
	public FleincomingflowstableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<FleincomingflowstableQActionRow> GetEnumerator() { return new QActionTableEnumerator<FleincomingflowstableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class FleoutgoingflowstableQActionTable : QActionTable, IEnumerable<FleoutgoingflowstableQActionRow>
{
	public FleoutgoingflowstableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<FleoutgoingflowstableQActionRow> GetEnumerator() { return new QActionTableEnumerator<FleoutgoingflowstableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class FleprovisionedflowstableQActionTable : QActionTable, IEnumerable<FleprovisionedflowstableQActionRow>
{
	public FleprovisionedflowstableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<FleprovisionedflowstableQActionRow> GetEnumerator() { return new QActionTableEnumerator<FleprovisionedflowstableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class FleinterfacesoverviewtableQActionRow : QActionTableRow
{
	/// <summary>PID: 9991001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableindex_9991001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991001 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabledescription_9991002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991002 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabledescription { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletype_9991003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991003 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabletype { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableadminstatus_9991004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991004 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableadminstatus { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableoperstatus_9991005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991005 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableoperstatus { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabledisplaykey_9991006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991006 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabledisplaykey { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtablerxbitrate_9991007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991007 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtablerxbitrate { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtablerxflows_9991008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991008 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtablerxflows { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletxbitrate_9991009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991009 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabletxbitrate { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletxflows_9991010 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991010 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabletxflows { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtablerxutilization_9991011 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991011 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtablerxutilization { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabletxutilization_9991012 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991012 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabletxutilization { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991013 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxbitrate_9991013 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991013 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxbitrate { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991014 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxbitratestatus_9991014 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 9991014 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxbitratestatus { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 9991015 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxflows_9991015 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 9991015 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxflows { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 9991016 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedrxflowsstatus_9991016 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 9991016 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedrxflowsstatus { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 9991017 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxbitrate_9991017 { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 9991017 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxbitrate { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 9991018 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxbitratestatus_9991018 { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 9991018 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxbitratestatus { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 9991019 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxflows_9991019 { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 9991019 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxflows { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 9991020 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtableexpectedtxflowsstatus_9991020 { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 9991020 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtableexpectedtxflowsstatus { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 9991021 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleinterfacesoverviewtabledcfinterfaceid_9991021 { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 9991021 | Type: read</summary>
	public System.Object Fleinterfacesoverviewtabledcfinterfaceid { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	public FleinterfacesoverviewtableQActionRow() : base(0, 21) { }
	public FleinterfacesoverviewtableQActionRow(System.Object[] oRow) : base(0, 21, oRow) { }
	public static implicit operator FleinterfacesoverviewtableQActionRow(System.Object[] source) { return new FleinterfacesoverviewtableQActionRow(source); }
	public static implicit operator System.Object[](FleinterfacesoverviewtableQActionRow source) { return source.ToObjectArray(); }
	public System.String[] GetChildKeysFleincomingflowstableFleincomingflowstableincominginterface(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 9991105, Key); }
	public System.String[] GetChildKeysFleoutgoingflowstableFleoutgoingflowstableoutgoinginterface(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 9991205, Key); }
}
/// <summary>IDX: 0</summary>
public class FleincomingflowstableQActionRow : QActionTableRow
{
	/// <summary>PID: 9991101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableinstance_9991101 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991101 | Type: read</summary>
	public System.Object Fleincomingflowstableinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstabledestinationip_9991102 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991102 | Type: read</summary>
	public System.Object Fleincomingflowstabledestinationip { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstabledestinationport_9991103 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991103 | Type: read</summary>
	public System.Object Fleincomingflowstabledestinationport { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablesourceip_9991104 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991104 | Type: read</summary>
	public System.Object Fleincomingflowstablesourceip { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableincominginterface_9991105 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991105 | Type: read</summary>
	public System.Object Fleincomingflowstableincominginterface { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstabletransporttype_9991106 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991106 | Type: read</summary>
	public System.Object Fleincomingflowstabletransporttype { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991107 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablerxbitrate_9991107 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991107 | Type: read</summary>
	public System.Object Fleincomingflowstablerxbitrate { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991108 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableexpectedrxbitrate_9991108 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991108 | Type: read</summary>
	public System.Object Fleincomingflowstableexpectedrxbitrate { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991109 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableexpectedrxbitratestatus_9991109 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991109 | Type: read</summary>
	public System.Object Fleincomingflowstableexpectedrxbitratestatus { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991110 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablelabel_9991110 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991110 | Type: read</summary>
	public System.Object Fleincomingflowstablelabel { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablefkoutgoing_9991111 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991111 | Type: read</summary>
	public System.Object Fleincomingflowstablefkoutgoing { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablelinkedflow_9991112 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991112 | Type: read</summary>
	public System.Object Fleincomingflowstablelinkedflow { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstableflowowner_9991113 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991113 | Type: read</summary>
	public System.Object Fleincomingflowstableflowowner { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleincomingflowstablepresent_9991114 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 9991114 | Type: read</summary>
	public System.Object Fleincomingflowstablepresent { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 9991165 | Type: write</summary>
	public System.Object Fleincomingflowstabledelete_9991165 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 9991165 | Type: write</summary>
	public System.Object Fleincomingflowstabledelete { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	public FleincomingflowstableQActionRow() : base(0, 15) { }
	public FleincomingflowstableQActionRow(System.Object[] oRow) : base(0, 15, oRow) { }
	public static implicit operator FleincomingflowstableQActionRow(System.Object[] source) { return new FleincomingflowstableQActionRow(source); }
	public static implicit operator System.Object[](FleincomingflowstableQActionRow source) { return source.ToObjectArray(); }
	public System.Object[] GetParentRowFleinterfacesoverviewtableFleincomingflowstableincominginterface(SLProtocol protocol) { return (System.Object[])protocol.GetRow(9991000, (System.String)Fleincomingflowstableincominginterface); }
	public System.Object[] GetParentRowFleoutgoingflowstableFleincomingflowstablefkoutgoing(SLProtocol protocol) { return (System.Object[])protocol.GetRow(9991200, (System.String)Fleincomingflowstablefkoutgoing); }
	public System.Object[] GetParentRowFleprovisionedflowstableFleincomingflowstablelinkedflow(SLProtocol protocol) { return (System.Object[])protocol.GetRow(9991300, (System.String)Fleincomingflowstablelinkedflow); }
	public System.String[] GetChildKeysFleoutgoingflowstableFleoutgoingflowstablefkincoming(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 9991211, Key); }
}
/// <summary>IDX: 0</summary>
public class FleoutgoingflowstableQActionRow : QActionTableRow
{
	/// <summary>PID: 9991201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableinstance_9991201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991201 | Type: read</summary>
	public System.Object Fleoutgoingflowstableinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabledestinationip_9991202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991202 | Type: read</summary>
	public System.Object Fleoutgoingflowstabledestinationip { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabledestinationport_9991203 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991203 | Type: read</summary>
	public System.Object Fleoutgoingflowstabledestinationport { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablesourceip_9991204 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991204 | Type: read</summary>
	public System.Object Fleoutgoingflowstablesourceip { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991205 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableoutgoinginterface_9991205 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991205 | Type: read</summary>
	public System.Object Fleoutgoingflowstableoutgoinginterface { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991206 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabletransporttype_9991206 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991206 | Type: read</summary>
	public System.Object Fleoutgoingflowstabletransporttype { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991207 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstabletxbitrate_9991207 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991207 | Type: read</summary>
	public System.Object Fleoutgoingflowstabletxbitrate { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991208 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableexpectedtxbitrate_9991208 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991208 | Type: read</summary>
	public System.Object Fleoutgoingflowstableexpectedtxbitrate { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991209 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableexpectedtxbitratestatus_9991209 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991209 | Type: read</summary>
	public System.Object Fleoutgoingflowstableexpectedtxbitratestatus { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991210 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablelabel_9991210 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991210 | Type: read</summary>
	public System.Object Fleoutgoingflowstablelabel { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991211 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablefkincoming_9991211 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991211 | Type: read</summary>
	public System.Object Fleoutgoingflowstablefkincoming { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991212 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablelinkedflow_9991212 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991212 | Type: read</summary>
	public System.Object Fleoutgoingflowstablelinkedflow { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991213 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstableflowowner_9991213 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991213 | Type: read</summary>
	public System.Object Fleoutgoingflowstableflowowner { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991214 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleoutgoingflowstablepresent_9991214 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 9991214 | Type: read</summary>
	public System.Object Fleoutgoingflowstablepresent { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 9991265 | Type: write</summary>
	public System.Object Fleoutgoingflowstabledelete_9991265 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 9991265 | Type: write</summary>
	public System.Object Fleoutgoingflowstabledelete { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	public FleoutgoingflowstableQActionRow() : base(0, 15) { }
	public FleoutgoingflowstableQActionRow(System.Object[] oRow) : base(0, 15, oRow) { }
	public static implicit operator FleoutgoingflowstableQActionRow(System.Object[] source) { return new FleoutgoingflowstableQActionRow(source); }
	public static implicit operator System.Object[](FleoutgoingflowstableQActionRow source) { return source.ToObjectArray(); }
	public System.Object[] GetParentRowFleinterfacesoverviewtableFleoutgoingflowstableoutgoinginterface(SLProtocol protocol) { return (System.Object[])protocol.GetRow(9991000, (System.String)Fleoutgoingflowstableoutgoinginterface); }
	public System.Object[] GetParentRowFleincomingflowstableFleoutgoingflowstablefkincoming(SLProtocol protocol) { return (System.Object[])protocol.GetRow(9991100, (System.String)Fleoutgoingflowstablefkincoming); }
	public System.Object[] GetParentRowFleprovisionedflowstableFleoutgoingflowstablelinkedflow(SLProtocol protocol) { return (System.Object[])protocol.GetRow(9991300, (System.String)Fleoutgoingflowstablelinkedflow); }
	public System.String[] GetChildKeysFleincomingflowstableFleincomingflowstablefkoutgoing(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 9991111, Key); }
}
/// <summary>IDX: 0</summary>
public class FleprovisionedflowstableQActionRow : QActionTableRow
{
	/// <summary>PID: 9991301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableid_9991301 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991301 | Type: read</summary>
	public System.Object Fleprovisionedflowstableid { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 9991302 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstablesourceid_9991302 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991302 | Type: read</summary>
	public System.Object Fleprovisionedflowstablesourceid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 9991303 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstabledestinationid_9991303 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991303 | Type: read</summary>
	public System.Object Fleprovisionedflowstabledestinationid { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 9991304 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableincomingdcfinterfaceid_9991304 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991304 | Type: read</summary>
	public System.Object Fleprovisionedflowstableincomingdcfinterfaceid { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 9991305 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableincomingdcfinterfacedynamiclink_9991305 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991305 | Type: read</summary>
	public System.Object Fleprovisionedflowstableincomingdcfinterfacedynamiclink { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 9991306 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfaceid_9991306 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991306 | Type: read</summary>
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfaceid { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 9991307 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfacedynamiclink_9991307 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991307 | Type: read</summary>
	public System.Object Fleprovisionedflowstableoutgoingdcfinterfacedynamiclink { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 9991308 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoptionalsourceidentifier_9991308 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991308 | Type: read</summary>
	public System.Object Fleprovisionedflowstableoptionalsourceidentifier { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 9991309 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstableoptionaldestinationidentifier_9991309 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991309 | Type: read</summary>
	public System.Object Fleprovisionedflowstableoptionaldestinationidentifier { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 9991310 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstabledestinationip_9991310 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991310 | Type: read</summary>
	public System.Object Fleprovisionedflowstabledestinationip { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 9991311 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstabledestinationport_9991311 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991311 | Type: read</summary>
	public System.Object Fleprovisionedflowstabledestinationport { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 9991312 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstablesourceip_9991312 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991312 | Type: read</summary>
	public System.Object Fleprovisionedflowstablesourceip { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 9991313 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Fleprovisionedflowstablemetadata_9991313 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 9991313 | Type: read</summary>
	public System.Object Fleprovisionedflowstablemetadata { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	public FleprovisionedflowstableQActionRow() : base(0, 13) { }
	public FleprovisionedflowstableQActionRow(System.Object[] oRow) : base(0, 13, oRow) { }
	public static implicit operator FleprovisionedflowstableQActionRow(System.Object[] source) { return new FleprovisionedflowstableQActionRow(source); }
	public static implicit operator System.Object[](FleprovisionedflowstableQActionRow source) { return source.ToObjectArray(); }
	public System.String[] GetChildKeysFleincomingflowstableFleincomingflowstablelinkedflow(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 9991112, Key); }
	public System.String[] GetChildKeysFleoutgoingflowstableFleoutgoingflowstablelinkedflow(SLProtocol protocol) { return (System.String[])protocol.NotifyProtocol(196, 9991212, Key); }
}
}
